Grammar:

comments are written in between ; so we just delete that

Start -> Expr Start
Expr -> (List) 
Expr -> atom
List -> Expr List
List -> Expr

first:
first(Expr) = {(, atom}
first(List) = {(, atom}

follow:
follow(List) = {)}
follow(Expr) = {(, atom, )}

lexing rules:
delete everything between ; 
split spaces, new lines and tabs
for each split:
	split at each ( or )

parsing rules:
i think i could just create embedded lists
also do numbers

running rules:

load a bunch of library functions:

evaluate (not counting macros):
	for n in list:
		evaluate(n)
	evaled_list[0] . call ( evaled_list[1:] )
